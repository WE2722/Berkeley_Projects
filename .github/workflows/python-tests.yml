name: Python tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: search
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install test requirements
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Debug: print python env and repo layout
        run: |
          python -c "import sys,os; print('PYTHON:', sys.version); print('EXEC:', sys.executable); print('CWD:', os.getcwd()); print('LISTROOT:', sorted(os.listdir('.'))); import pprint; pprint.pprint(sys.path)" | tee debug.txt
      - name: Import-check with full traceback
        run: |
          python - <<'PY' 2>&1 | tee import-debug.txt
import traceback
try:
    # Try importing the agent modules as CI would
    import pacmanAgents
    print('Imported pacmanAgents OK')
    import pacman
    print('Imported pacman OK')
except Exception:
    traceback.print_exc()
    raise
PY
      - name: Run tests (repo-only)
        run: |
          # Run only tests under the repository's tests folders to avoid collecting
          # unrelated tests from system/site-packages.
          pytest -q search/tests --junitxml=pytest-results.xml | tee pytest.log
      - name: Upload debug artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-debug-artifacts
          path: |
            debug.txt
            pytest.log
            pytest-results.xml
      - name: Print short previews of logs
        if: ${{ always() }}
        run: |
          echo "----- debug.txt (first 200 lines) -----"; head -n 200 debug.txt || true
          echo "----- pytest.log (first 200 lines) -----"; head -n 200 pytest.log || true
      - name: Print compact debug summary
        if: ${{ always() }}
        run: |
          python - <<'PY'
import sys,os
print('SUMMARY_LINE: exec=' + sys.executable + ' sys.path[0:5]=' + str(sys.path[:5]))
PY
